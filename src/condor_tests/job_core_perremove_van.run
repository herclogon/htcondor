#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorUtils;
use Check::SimpleJob;

$testname = "job_core_perremove_van";

#testreq: personal
my $config = <<CONDOR_TESTREQ_CONFIG;
    DAEMON_LIST = MASTER,SCHEDD,COLLECTOR,NEGOTIATOR,STARTD
	PERIODIC_EXPR_interval = 30
    NUM_CPUS = 2
    NEGOTIATOR_INTERVAL = 5
CONDOR_TESTREQ_CONFIG
#endtestreq

##
## Status Values
##
sub IDLE{1};
sub HELD{5};
sub RUNNING{2};

my $variation = "perremovefalse";

my %info;
my $cluster;

$executed = sub
{
	%info = @_;
	$cluster = $info{"cluster"};

	CondorTest::debug("Good. for periodic_remove cluster $cluster must run first\n",1);
};

$success = sub
{
	my %info = @_;
	my $cluster = $info{"cluster"};

	CondorTest::debug("Good, job should complete trivially\n",1);
};

$aborted = sub {
	CondorTest::debug("Abort event expected from periodic_remove policy evaluating to true\n",1);
	CondorTest::debug("Policy test worked.\n",1);
};

my $falsepolicy = '
	periodic_remove = (time() - QDate) < (0 )
';

my $truepolicy = '
	periodic_remove = (time() - QDate) > 2
';

	# FALSE
	SimpleJob::RunCheck(
		append_submit_commands=>$falsepolicy,
		duration=>3,
	    on_execute=>$executed,
	    on_success=>$success,
	);


	$variation = "perreleasetrue";

	# TRUE
	SimpleJob::RunCheck(
		append_submit_commands=>$truepolicy,
		duration=>6,
	    on_execute=>$executed,
	    on_abort=>$aborted,
	);

CondorTest::EndTest();
exit(0);
